Графические возможности Lazarus (оу май ( ͡° ͜ʖ ͡°) )

Свойство "Поверхность рисования" - Canvas, холст.
Инструментарий Canvas:
1) Pen (перо, карандаш)
2) Brush (кисть)
3) Font (шрифт)
4) Методы

Form1.<Компонент>.Canvas.Pen.Color := clRed; - обращать внимание на цепочку.

Можно рисовать и на форме, но лучше не надо.
Компоненты находятся в Additional.
Компонетны:
1. TPaintBox
2. TImage
Ключевое событие - onPaint, происходит, когда перерисовывается Canvas.

Предопределенные типы данных:
1. TPoint = Record - имеет фиксированные поля
     x, y: integer;
   end;

   Начало координат - левый верхний угол,
   Ось x совпадает с нормальным направлением, а y - вниз.

2. TRect = Record - вариантные поля
     Case integer of
       0: (left, top, right, bottom: integer);
       1: (topleft, bottomright: TPoint);
   end;

Методы и свойства Canvas.
 0. Векторное свойство Pixels[x,y] := <цвет>;
 1. MoveTo(x, y) - перемещает графический указатель (перо) в точку (x, y);
 2. LineTo(x, y) - рисует прямую линию в точку (x, y) из точки, в которую указывает перо;
 3. Rectangle(x1, y1, x2, y2) - из левого верхнего в правый нижний;
 4. Ellipse(x1, y1, x2, y2) - вписан в прямоугольную область;
 5. Arc(x1, y1, x2, y2, x3, y3, x4, y4) - рисует дугу;
 6. Chord() - рисует сегменты эллипса (дуга и стягивающая, хорда);
 7. Pie() - рисует то же самое, но соединяет через центр;
 8. PolyLine(p: array of TPoint) - не распишу, сори;
 9. Polygone(p: array of TPoint) - то же, что и 8, но замыкает;
10. TextOut(x, y, s);
11. TextWidth(s) - вернет ширину прямоугольной области s;
12. TextHeight(s) - вернет, соответственноб высоту области вывода s;


Построение графика функции.
y = f(x)
Xmin <= X <= Xmax

Накидваем на форму PaintBox / Image
Далее масштабирование, переходим в экранную (графическую) систему координат:
1. Определение Ymin и Ymax в диапазоне изменения агрумента
2. Вычисление масштабных коэффициентов
    mx = (xk - xn) / (xmax - xmin)
    my = (yk - yn) / (ymax - ymin)
3. Вычисление граф. системы координат
    kx = R[(x-xmin)mx] + xn;
    ky = R[(ymax-y)my] + yn;

Далее PolyLine по массиву из точек и кайфуем.

4. Нанесение координатной сетки и ее отцифровка
    nx}
        } кол-во интервалов, на которые делится област графика коорд. линиями.
    ny}

    lx := (xk - xn) div nx; - рисование координатных линий
    ly := (yk - yn) div ny;
    dxs := (xmax - xmin) / nx; - отцифровка координатных линий
    dys := (ymax - ymin) / ny:

for i ;= 0 to nx do
  with Form1.Image1.Canvas do begin
    xt := xn + i * lx;
    MoveTo(xt, yn);
    LineTo(xt, yk);
    xs := xmin + i * dxs;
    str(xs:4:2, s);
    TextOut(xt - TextWidth(s) div 2, yk + 10, s);
  end;

Еще события: onMouseUp, onMouseDown, onMouseMove - лучше юзать 3

Procedure TForm1.Button3Click();
begin
  Form2.Visible := true;
  Form2.FormPaint(Self);
  Form2.SetFocus;
end;













